{
  "_args": [
    [
      {
        "raw": "binary-search@^1.2.0",
        "scope": null,
        "escapedName": "binary-search",
        "name": "binary-search",
        "rawSpec": "^1.2.0",
        "spec": ">=1.2.0 <2.0.0",
        "type": "range"
      },
      "/home/frederik/wm2018/node_modules/angular-gettext-tools"
    ]
  ],
  "_from": "binary-search@>=1.2.0 <2.0.0",
  "_id": "binary-search@1.3.2",
  "_inCache": true,
  "_location": "/binary-search",
  "_nodeVersion": "6.3.1",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/binary-search-1.3.2.tgz_1470325444567_0.6622511600144207"
  },
  "_npmUser": {
    "name": "darkskyapp",
    "email": "developer@forecast.io"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "binary-search@^1.2.0",
    "scope": null,
    "escapedName": "binary-search",
    "name": "binary-search",
    "rawSpec": "^1.2.0",
    "spec": ">=1.2.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/angular-gettext-tools"
  ],
  "_resolved": "https://registry.npmjs.org/binary-search/-/binary-search-1.3.2.tgz",
  "_shasum": "88c9b7bd2b7221d352da78ec887f5af2549e4de2",
  "_shrinkwrap": null,
  "_spec": "binary-search@^1.2.0",
  "_where": "/home/frederik/wm2018/node_modules/angular-gettext-tools",
  "author": {
    "name": "The Dark Sky Company, LLC",
    "email": "support@darkskyapp.com"
  },
  "bugs": {
    "url": "https://github.com/darkskyapp/binary-search/issues"
  },
  "contributors": [
    {
      "name": "Darcy Parker",
      "url": "https://github.com/darcyparker"
    }
  ],
  "dependencies": {},
  "description": "tiny binary search function with comparators",
  "devDependencies": {
    "chai": "^3.5.0",
    "mocha": "^2.4.5"
  },
  "directories": {},
  "dist": {
    "shasum": "88c9b7bd2b7221d352da78ec887f5af2549e4de2",
    "tarball": "https://registry.npmjs.org/binary-search/-/binary-search-1.3.2.tgz"
  },
  "gitHead": "887e9e031c1d3fe40f3f21cda2fee0cd800d5f81",
  "homepage": "https://github.com/darkskyapp/binary-search#readme",
  "license": "CC0-1.0",
  "maintainers": [
    {
      "name": "darkskyapp",
      "email": "devsupport@darkskyapp.com"
    }
  ],
  "name": "binary-search",
  "optionalDependencies": {},
  "readme": "binary-search\n=============\n\nThis is a really tiny, stupid, simple binary search library for Node.JS. We\nwrote it because existing solutions were bloated and incorrect.\n\nThis version is a straight port of the Java version mentioned by Joshua Bloch\nin his article, [Nearly All Binary Searches and Merge Sorts are Broken](http://googleresearch.blogspot.com/2006/06/extra-extra-read-all-about-it-nearly.html).\n\nThanks to [Conrad Irwin](https://github.com/ConradIrwin) and [Michael\nMarino](https://github.com/mgmarino) for, ironically, pointing out bugs.\n\nExample\n-------\n\n    var bs = require(\"binary-search\");\n    bs([1, 2, 3, 4], 3, function(a, b) { return a - b; }); // => 2\n    bs([1, 2, 4, 5], 3, function(a, b) { return a - b; }); // => -3\n\nBe advised that passing in a comparator function is *required*. Since you're\nprobably using one for your sort function anyway, this isn't a big deal.\n\nThe 3rd and 4th arguments to the comparator are the current index and array, respectively. You shouldn't normally need the index or array to compare values, but it's there if you do.\n\nYou may also, optionally, specify an input range as the final two parameters,\nin case you want to limit the search to a particular range of inputs. However,\nbe advised that this is generally a bad idea (but sometimes bad ideas are\nnecessary).\n\nLicense\n-------\n\nTo the extend possible by law, The Dark Sky Company, LLC has [waived all\ncopyright and related or neighboring rights][cc0] to this library.\n\n[cc0]: http://creativecommons.org/publicdomain/zero/1.0/\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/darkskyapp/binary-search.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "typings": "./binary-search.d.ts",
  "version": "1.3.2"
}
